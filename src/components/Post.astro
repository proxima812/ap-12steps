---
import { formatDate } from "@/utils"
import { urlFor } from "@/utils/image"
import { PortableText } from "astro-portabletext"
const { post, data, slug, isSanity, isNews } = Astro.props

const url = isSanity ? `/archive/${post.slug.current}` : isNews ? `#` : `/posts/${slug}`
const title = isSanity || isNews ? post.title : data.title
const description = isSanity || isNews ? post.description : data.description
---

<a href={url} class={isNews && `pointer-events-none`}>
	{
		post?.mainImage && (
			<img
				src={urlFor(post.mainImage).width(1200).height(630).url()}
				alt={post.title}
				class="rounded-xl object-cover"
				loading="lazy"
				decoding="async"
			/>
		)
	}
	<article class="p-6 rounded-xl bg-zinc-900 ring-1 ring-zinc-800">
		<div class="flex flex-col gap-4">
			<h2 class="font-semibold text-xl">{title}</h2>
			<p class="text-zinc-400">{description}</p>
			{
				isNews && (
					<div class="prose prose-blue prose-invert">
						<PortableText value={post.body} />
					</div>
          <span class="text-sm text-zinc-400">{formatDate(post.date)}</span>
				)
			}
			{
				isSanity && (
					<div class="flex items-center justify-between">
						{post.author && (
							<div class="flex gap-3 items-center">
								{post.author.picture && (
									<img
										class="rounded-full object-cover"
										src={urlFor(post.author.picture).width(120).height(120).url()}
										loading="eager"
										width="35"
										height="35"
										decoding="async"
										alt={post.author.name}
									/>
								)}
								<span class="font-medium text-sm">{post.author.name}</span>
							</div>
						)}
						<span class="text-sm text-zinc-400">{formatDate(post.date)}</span>
					</div>
				)
			}
		</div>
	</article>
</a>
